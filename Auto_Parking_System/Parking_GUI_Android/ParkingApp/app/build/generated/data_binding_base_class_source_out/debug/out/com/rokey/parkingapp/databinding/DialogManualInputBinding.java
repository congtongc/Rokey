// Generated by view binder compiler. Do not edit!
package com.rokey.parkingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.rokey.parkingapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogManualInputBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText etLicensePlate;

  @NonNull
  public final RadioButton rbDisabled;

  @NonNull
  public final RadioButton rbEv;

  @NonNull
  public final RadioButton rbNormal;

  @NonNull
  public final RadioGroup rgCarType;

  private DialogManualInputBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText etLicensePlate, @NonNull RadioButton rbDisabled,
      @NonNull RadioButton rbEv, @NonNull RadioButton rbNormal, @NonNull RadioGroup rgCarType) {
    this.rootView = rootView;
    this.etLicensePlate = etLicensePlate;
    this.rbDisabled = rbDisabled;
    this.rbEv = rbEv;
    this.rbNormal = rbNormal;
    this.rgCarType = rgCarType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogManualInputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogManualInputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_manual_input, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogManualInputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etLicensePlate;
      TextInputEditText etLicensePlate = ViewBindings.findChildViewById(rootView, id);
      if (etLicensePlate == null) {
        break missingId;
      }

      id = R.id.rbDisabled;
      RadioButton rbDisabled = ViewBindings.findChildViewById(rootView, id);
      if (rbDisabled == null) {
        break missingId;
      }

      id = R.id.rbEv;
      RadioButton rbEv = ViewBindings.findChildViewById(rootView, id);
      if (rbEv == null) {
        break missingId;
      }

      id = R.id.rbNormal;
      RadioButton rbNormal = ViewBindings.findChildViewById(rootView, id);
      if (rbNormal == null) {
        break missingId;
      }

      id = R.id.rgCarType;
      RadioGroup rgCarType = ViewBindings.findChildViewById(rootView, id);
      if (rgCarType == null) {
        break missingId;
      }

      return new DialogManualInputBinding((LinearLayout) rootView, etLicensePlate, rbDisabled, rbEv,
          rbNormal, rgCarType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
